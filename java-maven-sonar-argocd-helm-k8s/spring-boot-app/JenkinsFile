pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        // git branch: 'main', url: 'https://github.com/flonix-93/Jenkins-Zero-To-Hero.git' // Forked repository URL (Commented as Git ID updated in Jenkins)
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package' // Build the Maven project
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://13.60.219.160:9000" // SonarQube server URL
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "sunandandas/ultimate-cicd:${BUILD_NUMBER}" // Updated Docker Hub user ID
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          '''
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero" // Repository name
        GIT_USER_NAME = "flonix-93" // GitHub username
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "Navigating to manifests directory..."
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests

            echo "Setting up Git config..."
            git config user.email "sunandandas1993@gmail.com"
            git config user.name "Sunandan Das"

            echo "Updating deployment.yml with build number..."
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yml

            echo "Adding and committing changes..."
            git add deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"

            echo "Pushing changes to remote repository..."
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
